<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.factorialsystems.msscprovider.dao.SingleRechargeMapper">
    <resultMap id="rechargeResultMap" type="io.factorialsystems.msscprovider.domain.rechargerequest.SingleRechargeRequest">
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="service_id" property="serviceId" jdbcType="INTEGER" />
        <result column="service_code" property="serviceCode" jdbcType="VARCHAR" />
        <result column="service_cost" property="serviceCost" jdbcType="DECIMAL"/>
        <result column="recipient" property="recipient" jdbcType="VARCHAR"/>
        <result column="payment_id" property="paymentId" jdbcType="VARCHAR"/>
        <result column="closed" property="closed" jdbcType="BOOLEAN"/>
        <result column="authorization_url" property="authorizationUrl" jdbcType="VARCHAR"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
        <result column="product_id" property="productId" jdbcType="VARCHAR"/>
        <result column="payment_mode" property="paymentMode" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="message" property="message" jdbcType="VARCHAR"/>
        <result column="account_type" property="accountType" jdbcType="VARCHAR"/>
        <result column="auto_request_id" property="autoRequestId" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="scheduled_request_id" property="scheduledRequestId" jdbcType="VARCHAR"/>
        <result column="bulk_request_id" property="bulkRequestId" jdbcType="VARCHAR"/>
        <result column="async_request" property="asyncRequest" jdbcType="BOOLEAN"/>
        <result column="email_id" property="emailId" jdbcType="VARCHAR"/>
        <result column="successful_retry_id" property="retryId" jdbcType="VARCHAR"/>
        <result column="refund_id" property="refundId" jdbcType="VARCHAR"/>
        <result column="resolve_id" property="resolveId" jdbcType="VARCHAR"/>
        <result column="failed" property="failed" jdbcType="BOOLEAN"/>
        <result column="results" property="results" jdbcType="VARCHAR"/>
        <result column="recharge_provider_id" property="rechargeProviderId" jdbcType="INTEGER"/>
        <result column="recharge_provider" property="rechargeProvider" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="factoryResultMap" type="io.factorialsystems.msscprovider.domain.RechargeFactoryParameters">
        <result column="provider_code" property="providerCode" jdbcType="VARCHAR"/>
        <result column="recharge_provider_code" property="rechargeProviderCode" jdbcType="VARCHAR"/>
        <result column="recharge_provider_id" property="rechargeProviderId" jdbcType="INTEGER"/>
        <result column="service_action" property="serviceAction" jdbcType="VARCHAR"/>
        <result column="async" property="async" jdbcType="BOOLEAN"/>
        <result column="has_results" property="hasResults" jdbcType="BOOLEAN"/>
    </resultMap>

    <resultMap id="requestRetryMap" type="io.factorialsystems.msscprovider.domain.rechargerequest.SingleRechargeRequestRetry">
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="recharge_request_id" property="requestId" jdbcType="VARCHAR"/>
        <result column="retried_on" property="retriedOn" jdbcType="TIMESTAMP"/>
        <result column="successful" property="successful" jdbcType="BOOLEAN"/>
        <result column="status_message" property="statusMessage" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Column_List">
        r.id,
        r.user_id,
        r.email_id,
        r.service_id,
        p.service_code,
        r.service_cost,
        r.payment_id,
        r.recipient,
        r.closed,
        r.authorization_url,
        r.telephone,
        r.product_id,
        r.payment_mode,
        r.message,
        r.status,
        r.name,
        r.failed,
        r.auto_request_id,
        r.scheduled_request_id,
        r.bulk_request_id,
        r.account_type,
        r.async_request,
        r.createdAt,
        r.successful_retry_id,
        r.refund_id,
        r.resolve_id,
        r.results,
        r.recharge_provider_id,
        rp.name as recharge_provider
    </sql>

    <sql id="retry_column_list">
        id,
        recharge_request_id,
        retried_on,
        retried_by,
        recipient,
        successful,
        status_message
    </sql>

    <select id="findRequestRetryById" parameterType="java.lang.String" resultMap="requestRetryMap">
        select
        <include refid="retry_column_list"/>
        from single_recharge_request_retries where id = #{id}
    </select>

    <insert id="saveRetryRequest" parameterType="io.factorialsystems.msscprovider.domain.rechargerequest.SingleRechargeRequestRetry">
        insert into single_recharge_request_retries(id, recharge_request_id, successful, status_message, retried_by, recipient)
        values(#{id}, #{requestId}, #{successful}, #{statusMessage}, #{retriedBy}, #{recipient})
    </insert>

    <update id="failRequest" parameterType="java.util.Map">
        update providerdb.recharge_requests
        set failed = true,
            failed_message = #{message}
        where id = #{id}
    </update>

    <update id="saveSuccessfulRetry" parameterType="java.util.Map">
        update providerdb.recharge_requests set successful_retry_id = #{retryId} where id = #{id}
    </update>

    <select id="findById" parameterType="java.lang.String" resultMap="rechargeResultMap">
        select
        <include refid="Column_List"/>
        from recharge_requests r left join recharge_providers rp on r.recharge_provider_id = rp.id
        inner join provider_services p on r.service_id = p.id
        where r.id = #{id}
    </select>

    <select id="findSingleByUserIdAndDateRange" parameterType="io.factorialsystems.msscprovider.dto.CombinedRequestDto" resultMap="rechargeResultMap">
        select
        <include refid="Column_List"/>
        from recharge_requests r left join recharge_providers rp on r.recharge_provider_id = rp.id
        inner join provider_services p on r.service_id = p.id
        where r.user_id = #{id}

        <if test="startDate != null and endDate != null">
            and p.createdAt between #{startDate} and #{endDate}
        </if>

        <if test="startDate != null and endDate == null">
            and p.createdAt &gt; #{startDate}
        </if>
    </select>

    <select id="findByUserId" parameterType="java.lang.String" resultMap="rechargeResultMap">
        select
        <include refid="Column_List"/>
        from recharge_requests r left join recharge_providers rp on r.recharge_provider_id = rp.id
        inner join provider_services p on r.service_id = p.id
        where r.user_id = #{id}
    </select>

    <select id="factory" parameterType="java.lang.Integer" resultMap="factoryResultMap">
        {call sp_factory(#{id, jdbcType = INTEGER, mode = IN})}
    </select>


    <update id="closeRequest" parameterType="java.util.Map">
        update recharge_requests
        <set>
            closed = true,
            <if test="provider != null">recharge_provider_id=#{provider},</if>
            <if test="results != null">results=#{results},</if>
        </set>
        where id = #{id}
    </update>

    <update id="closeAndFailRequest" parameterType="java.util.Map">
        update recharge_requests set results = #{results}, failed_message=#{failedMessage}, closed = true, failed = true
        where id = #{id}
    </update>

    <insert id="save" parameterType="io.factorialsystems.msscprovider.domain.rechargerequest.SingleRechargeRequest" >
        insert into recharge_requests(id, user_id, service_id, service_cost, recipient, payment_id, telephone,
                                      product_id, authorization_url, redirect_url, payment_mode, status, name,
                                      async_request, message, account_type, auto_request_id, scheduled_request_id,
                                      bulk_request_id, results)
        values(#{id}, #{userId}, #{serviceId}, #{serviceCost}, #{recipient}, #{paymentId}, #{telephone},
               #{productId}, #{authorizationUrl}, #{redirectUrl}, #{paymentMode}, #{status}, #{name},
               #{asyncRequest}, #{message}, #{accountType}, #{autoRequestId}, #{scheduledRequestId},
               #{bulkRequestId}, #{results})
    </insert>

    <insert id="saveResolution" parameterType="io.factorialsystems.msscprovider.domain.SingleResolve">
        insert into single_recharge_request_resolve(id, recharge_request_id, resolved_by, resolution_message)
        values (#{id}, #{rechargeId}, #{resolvedBy}, #{resolutionMessage})
    </insert>

    <update id="resolveRequest" parameterType="java.util.Map">
        update providerdb.recharge_requests set resolve_id = #{resolveId} where id = #{id}
    </update>

    <select id="findRequestsByUserId" parameterType="java.lang.String" resultMap="rechargeResultMap">
        select
        <include refid="Column_List"/>
        from recharge_requests r left join recharge_providers rp on r.recharge_provider_id = rp.id
        inner join provider_services p on r.service_id = p.id
        where r.user_id = #{id}
        order by r.createdAt desc
    </select>

    <update id="setEmailId" parameterType="java.util.Map">
        update providerdb.recharge_requests set email_id = #{emailId} where id = #{id}
    </update>

    <update id="saveRefund" parameterType="java.util.Map">
        update providerdb.recharge_requests set refund_id = #{refundId} where id = #{id}
    </update>

    <select id="search" parameterType="io.factorialsystems.msscprovider.domain.search.SearchSingleRecharge" resultMap="rechargeResultMap">
        select
        <include refid="Column_List"/>
        from recharge_requests r left join recharge_providers rp on r.recharge_provider_id = rp.id
        inner join provider_services p on r.service_id = p.id
        where r.user_id = #{userId}

        <if test="recipient != null">
            and r.recipient like CONCAT(#{recipient}, '%')
        </if>

        <if test="product != null">
            and p.service_code like CONCAT(#{product}, '%')
        </if>

        <if test="startDate != null and endDate != null">
            and r.createdAt between #{startDate} and #{endDate}
        </if>

        <if test="startDate != null and endDate == null">
            and r.createdAt &gt; #{startDate}
        </if>

        <if test="rechargeId != null">
            and r.id like CONCAT(#{rechargeId}, '%')
        </if>

        <if test="failed != null">
            and r.failed = #{failed, jdbcType=BOOLEAN}
        </if>

        <if test="unresolved != null and unresolved == true">
            and r.failed = true and r.successful_retry_id is NULL and r.refund_id is NULL and r.resolve_id is NULL
        </if>
    </select>

    <select id="adminFailedSearch" parameterType="io.factorialsystems.msscprovider.dto.search.SearchSingleFailedRechargeDto" resultMap="rechargeResultMap">
        select
        <include refid="Column_List"/>
        from recharge_requests r left join recharge_providers rp on r.recharge_provider_id = rp.id
        inner join provider_services p on r.service_id = p.id
        where r.failed = true

        <if test="unresolved != null">
           and r.successful_retry_id is NULL and r.refund_id is NULL and r.resolve_id is NULL
        </if>

        <if test="searchRecipient != null">
            and r.recipient like CONCAT(#{searchRecipient}, '%')
        </if>

        <if test="searchProduct != null">
            and p.service_code like CONCAT(#{searchProduct}, '%')
        </if>

        <if test="searchDate != null">
            and date(r.createdAt) = date(#{searchDate})
        </if>
    </select>

    <select id="findFailedUnResolvedRequests" resultMap="rechargeResultMap">
        select
        <include refid="Column_List"/>
        from recharge_requests r left join recharge_providers rp on r.recharge_provider_id = rp.id
        inner join provider_services p on r.service_id = p.id
        where r.failed = true
        and r.refund_id is NULL
        and r.resolve_id is NULL
        and r.successful_retry_id is NULL
        order by r.createdAt desc
    </select>

    <select id="findFailedRequests" resultMap="rechargeResultMap">
        select
        <include refid="Column_List"/>
        from recharge_requests r left join recharge_providers rp on r.recharge_provider_id = rp.id
        inner join provider_services p on r.service_id = p.id
        where r.failed = true
        order by r.createdAt desc
    </select>

    <select id="findListFailedRequests" resultMap="rechargeResultMap">
        select
        <include refid="Column_List"/>
        from recharge_requests r left join recharge_providers rp on r.recharge_provider_id = rp.id
        inner join provider_services p on r.service_id = p.id
        where r.failed = true
        order by r.createdAt desc
    </select>

    <select id="findListUnresolvedFailedRequests" resultMap="rechargeResultMap">
        select
        <include refid="Column_List"/>
        from recharge_requests r left join recharge_providers rp on r.recharge_provider_id = rp.id
        inner join provider_services p on r.service_id = p.id
        where r.failed = true
        and refund_id is NULL
        and resolve_id is NULL
        and successful_retry_id is NULL
        order by r.createdAt desc
    </select>

    <select id="findByUserIdAndDateRange" parameterType="io.factorialsystems.msscprovider.dto.DateRangeDto" resultMap="rechargeResultMap">
        select
        <include refid="Column_List"/>
        from recharge_requests r left join recharge_providers rp on r.recharge_provider_id = rp.id
        inner join provider_services p on r.service_id = p.id
        where r.user_id = #{id}

        <if test="startDate != null and endDate != null">
            and r.createdAt between #{startDate} and #{endDate}
        </if>

        <if test="startDate != null and endDate == null">
            and r.createdAt &gt; #{startDate}
        </if>
    </select>

    <select id="findSingleRechargeByCriteria" parameterType="io.factorialsystems.msscprovider.domain.report.RechargeReportRequest" resultMap="rechargeResultMap">
        select
        <include refid="Column_List"/>

        from recharge_requests r left join recharge_providers rp on r.recharge_provider_id = rp.id
        inner join provider_services p on r.service_id = p.id

        <where>
            <if test="userId != null">
                and user_id = #{userId}
            </if>

            <if test="serviceId != null">
                and service_id = #{serviceId}
            </if>

            <if test="providerId != null">
                and recharge_provider_id = #{providerId}
            </if>

            <if test="status != null">
                and failed = #{status}
            </if>

            <if test="startDate != null and endDate != null">
                and r.createdAt between #{startDate} and #{endDate}
            </if>

            <if test="startDate != null and endDate == null">
                and r.createdAt &gt; #{startDate}
            </if>
        </where>
    </select>
</mapper>