<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="io.factorialsystems.msscwallet.dao.FundWalletMapper">
    <resultMap id="fundWalletResultMap" type="io.factorialsystems.msscwallet.domain.FundWalletRequest">
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="authorization_url" property="authorizationUrl" jdbcType="VARCHAR"/>
        <result column="redirect_url" property="redirectUrl" jdbcType="VARCHAR"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="fund_type" property="fundType" jdbcType="INTEGER"/>
        <result column="message" property="message" jdbcType="VARCHAR"/>
        <result column="payment_id" property="paymentId" jdbcType="VARCHAR"/>
        <result column="created_on" property="createdOn" jdbcType="TIMESTAMP"/>
        <result column="payment_verified" property="paymentVerified" jdbcType="BOOLEAN"/>
        <result column="closed" property="closed" jdbcType="BOOLEAN"/>
        <result column="actioned_by" property="actionedBy" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="column_list">
        id,
        user_id,
        actioned_by,
        authorization_url,
        redirect_url,
        amount,
        status,
        fund_type,
        message,
        payment_id,
        payment_verified,
        created_on,
        closed
    </sql>


    <select id="findById" parameterType="java.lang.String" resultMap="fundWalletResultMap">
        select
        <include refid="column_list"/>
        from fund_wallet_request
        where id = #{id}
    </select>

    <select id="findByUserId" parameterType="java.lang.String" resultMap="fundWalletResultMap">
        select
        <include refid="column_list"/>
        from fund_wallet_request
        where user_id = #{id}
        and payment_verified = true
    </select>

    <select id="findByCriteria" parameterType="io.factorialsystems.msscwallet.dto.WalletReportRequestDto" resultMap="fundWalletResultMap">
        select
        <include refid="column_list"/>
        from fund_wallet_request

        <where>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>

            <if test="startDate != null and endDate != null">
                and created_on between #{startDate} and #{endDate}
            </if>

            <if test="startDate != null and endDate == null">
                and created_on &gt; #{startDate}
            </if>
        </where>
    </select>

    <insert id="save" parameterType="io.factorialsystems.msscwallet.domain.FundWalletRequest">
        insert into fund_wallet_request(id, user_id, actioned_by, authorization_url, redirect_url, amount, status, message, payment_id, fund_type) values
            (#{id},  #{userId}, #{actionedBy}, #{authorizationUrl}, #{redirectUrl}, #{amount}, #{status},#{message},#{paymentId}, #{fundType})
    </insert>

    <insert id="saveClosedAndVerified" parameterType="io.factorialsystems.msscwallet.domain.FundWalletRequest">
        insert into fund_wallet_request(id, user_id, actioned_by, authorization_url, redirect_url, amount, status, message, payment_id, fund_type, closed, payment_verified) values
            (#{id},  #{userId}, #{actionedBy}, #{authorizationUrl}, #{redirectUrl}, #{amount}, #{status},#{message},#{paymentId}, #{fundType}, #{closed}, #{paymentVerified})
    </insert>

    <update id="update" parameterType="io.factorialsystems.msscwallet.domain.FundWalletRequest">
        update fund_wallet_request
        <set>
            <if test="closed != null">closed=#{closed},</if>
            <if test="paymentVerified != null">payment_verified=#{paymentVerified},</if>
        </set>
        where id = #{id}
    </update>
</mapper>
